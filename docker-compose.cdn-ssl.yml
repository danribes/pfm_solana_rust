version: '3.8'

# CDN & SSL Integration for PFM Community Management Application
# Tasks 6.6.3 & 6.6.4: SSL/TLS Certificate Management & CDN Integration

services:
  # Nginx with SSL termination and CDN optimization
  nginx-proxy:
    image: nginx:1.25-alpine
    container_name: pfm-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # SSL certificates from Let's Encrypt
      - letsencrypt_certs:/etc/letsencrypt:ro
      - letsencrypt_webroot:/var/www/certbot:ro
      
      # SSL and security configuration files
      - ./infra/ssl/config/tls-config.conf:/etc/nginx/conf.d/ssl.conf:ro
      - ./infra/ssl/config/security-headers.conf:/etc/nginx/conf.d/security.conf:ro
      
      # Nginx proxy configuration
      - ./infra/nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      
      # CDN optimizations
      - ./frontend/public/sw.js:/var/www/html/sw.js:ro
      - ./frontend/pwa/manifest.json:/var/www/html/manifest.json:ro
      
      # Logs
      - nginx_ssl_logs:/var/log/nginx
    environment:
      - TZ=UTC
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024
    depends_on:
      - backend
      - certbot
    networks:
      - pfm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Certbot for Let's Encrypt certificate management
  certbot:
    image: certbot/certbot:latest
    container_name: pfm-certbot
    volumes:
      # Let's Encrypt certificates
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_webroot:/var/www/certbot
      
      # Certbot configuration
      - ./infra/ssl/config/certbot-config.ini:/etc/letsencrypt/cli.ini:ro
      
      # Scripts for hooks
      - ./scripts/ssl:/usr/local/bin/ssl-scripts:ro
      
      # Logs
      - certbot_logs:/var/log/letsencrypt
    environment:
      - TZ=UTC
      - CERTBOT_EMAIL=admin@pfm-community.app
    networks:
      - pfm-network
    restart: "no"
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'

  # SSL Monitoring Service
  ssl-monitor:
    build:
      context: ./infra/ssl/monitoring
      dockerfile: Dockerfile
    container_name: pfm-ssl-monitor
    volumes:
      - letsencrypt_certs:/etc/letsencrypt:ro
      - ssl_monitor_logs:/var/log/ssl-monitor
      - ssl_metrics:/var/lib/ssl-metrics
    environment:
      - TZ=UTC
      - DOMAINS=pfm-community.app,api.pfm-community.app,admin.pfm-community.app,member.pfm-community.app
      - WARNING_DAYS=14
      - CRITICAL_DAYS=7
      - CHECK_INTERVAL=3600
    networks:
      - pfm-network
    restart: unless-stopped
    depends_on:
      - certbot
    healthcheck:
      test: ["CMD", "/usr/local/bin/ssl-scripts/certificate-monitor.sh", "check"]
      interval: 1h
      timeout: 30s
      retries: 3

  # CDN Cache Warming Service
  cdn-optimizer:
    image: alpine:3.18
    container_name: pfm-cdn-optimizer
    volumes:
      - ./scripts/cdn:/usr/local/bin/cdn-scripts:ro
      - ./scripts/optimization:/usr/local/bin/optimization-scripts:ro
      - cdn_cache_logs:/var/log/cdn
    environment:
      - TZ=UTC
      - BASE_URL=https://pfm-community.app
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN:-}
      - CLOUDFLARE_ZONE_ID=${CLOUDFLARE_ZONE_ID:-}
    networks:
      - pfm-network
    restart: "no"
    command: /bin/sh -c 'apk add --no-cache curl bash jq && while :; do /usr/local/bin/cdn-scripts/cache-warming.sh && sleep 3600; done'

volumes:
  letsencrypt_certs:
    driver: local
  letsencrypt_webroot:
    driver: local
  certbot_logs:
    driver: local
  nginx_ssl_logs:
    driver: local
  ssl_monitor_logs:
    driver: local
  ssl_metrics:
    driver: local
  cdn_cache_logs:
    driver: local

networks:
  pfm-network:
    external: true
