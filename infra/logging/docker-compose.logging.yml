version: '3.8'

services:
  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: pfm-${ENVIRONMENT:-staging}-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yml:/etc/loki/config.yml:ro
      - ./loki/alerting-rules.yml:/etc/loki/rules/alerting-rules.yml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/config.yml
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-staging}
    networks:
      - pfm_logging_network
      - pfm_monitoring_network
    labels:
      - "logging=enabled"
      - "environment=${ENVIRONMENT:-staging}"
      - "service=loki"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Promtail - Log collector
  promtail:
    image: grafana/promtail:latest
    container_name: pfm-${ENVIRONMENT:-staging}-promtail
    restart: unless-stopped
    volumes:
      - ./loki/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../logs:/var/log/pfm:ro
    command: -config.file=/etc/promtail/config.yml
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-staging}
    networks:
      - pfm_logging_network
    depends_on:
      - loki
    labels:
      - "logging=enabled"
      - "environment=${ENVIRONMENT:-staging}"
      - "service=promtail"

  # Log rotation service
  logrotate:
    image: alpine:latest
    container_name: pfm-${ENVIRONMENT:-staging}-logrotate
    restart: unless-stopped
    volumes:
      - ../logs:/var/log/pfm
      - ./logrotate/logrotate.conf:/etc/logrotate.conf:ro
      - ./logrotate/pfm-logs:/etc/logrotate.d/pfm-logs:ro
    command: >
      sh -c "
        apk add --no-cache logrotate &&
        while true; do
          logrotate -v /etc/logrotate.conf
          sleep 3600
        done
      "
    networks:
      - pfm_logging_network
    labels:
      - "logging=enabled"
      - "environment=${ENVIRONMENT:-staging}"
      - "service=logrotate"

  # Log shipping service for external systems
  log-shipper:
    build:
      context: ./shipper
      dockerfile: Dockerfile
    container_name: pfm-${ENVIRONMENT:-staging}-log-shipper
    restart: unless-stopped
    volumes:
      - ../logs:/var/log/pfm:ro
      - ./shipper/config.yml:/etc/log-shipper/config.yml:ro
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-staging}
      - EXTERNAL_LOG_ENDPOINT=${EXTERNAL_LOG_ENDPOINT:-}
      - EXTERNAL_LOG_TOKEN=${EXTERNAL_LOG_TOKEN:-}
      - SHIPPING_ENABLED=${LOG_SHIPPING_ENABLED:-false}
    networks:
      - pfm_logging_network
    labels:
      - "logging=enabled"
      - "environment=${ENVIRONMENT:-staging}"
      - "service=log-shipper"
    profiles:
      - external-logging

volumes:
  loki_data:
    driver: local
    labels:
      environment: ${ENVIRONMENT:-staging}
      service: loki

networks:
  pfm_logging_network:
    driver: bridge
    labels:
      environment: ${ENVIRONMENT:-staging}
      purpose: logging

  # Connect to monitoring network
  pfm_monitoring_network:
    external: true 