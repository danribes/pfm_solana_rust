server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Backend application logs
  - job_name: backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: pfm-backend
          environment: ${ENVIRONMENT:-staging}
          service: backend
          __path__: /var/log/backend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            requestId: requestId
            userId: userId
            sessionId: sessionId
            category: category
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          service:
          category:
      - template:
          source: message
          template: '{{ .message | ToLower }}'

  # Frontend application logs  
  - job_name: frontend-admin
    static_configs:
      - targets:
          - localhost
        labels:
          job: pfm-frontend-admin
          environment: ${ENVIRONMENT:-staging}
          service: frontend-admin
          __path__: /var/log/frontend/admin/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            component: component
            userId: userId
            sessionId: sessionId
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          component:

  - job_name: frontend-member
    static_configs:
      - targets:
          - localhost
        labels:
          job: pfm-frontend-member
          environment: ${ENVIRONMENT:-staging}
          service: frontend-member
          __path__: /var/log/frontend/member/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            component: component
            userId: userId
            sessionId: sessionId
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          component:

  # Container logs from Docker
  - job_name: containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=enabled"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_environment']
        target_label: 'environment'
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            service: service
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          environment: ${ENVIRONMENT:-staging}
          service: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<process>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: Jan _2 15:04:05
      - labels:
          hostname:
          process:

  # Audit logs
  - job_name: audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: pfm-audit
          environment: ${ENVIRONMENT:-staging}
          service: audit
          __path__: /var/log/audit/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event: event
            level: level
            userId: userId
            sessionId: sessionId
            ipAddress: ipAddress
            category: category
            severity: severity
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          category:
          severity:

  # Security logs
  - job_name: security
    static_configs:
      - targets:
          - localhost
        labels:
          job: pfm-security
          environment: ${ENVIRONMENT:-staging}
          service: security
          __path__: /var/log/security/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event: event
            level: level
            userId: userId
            ipAddress: ipAddress
            severity: severity
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          severity:

  # Performance logs
  - job_name: performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: pfm-performance
          environment: ${ENVIRONMENT:-staging}
          service: performance
          __path__: /var/log/performance/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event: event
            duration: duration
            endpoint: endpoint
            method: method
            statusCode: statusCode
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          method:
          endpoint: 